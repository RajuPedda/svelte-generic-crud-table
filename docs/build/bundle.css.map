{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Icon.svelte",
    "../../SvelteGenericCrudTable.svelte",
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<svg\r\n  aria-hidden=\"true\"\r\n  class=\"{classes}\"\r\n  role=\"img\"\r\n  xmlns=\"http://www.w3.org/2000/svg\"\r\n  viewBox=\"{viewBox}\"\r\n>\r\n  <path fill=\"currentColor\" d=\"{path}\" />\r\n</svg>\r\n<script>\r\n  export let icon;\r\n\r\n  let path = [];\r\n  let classes = \"\";\r\n  let viewBox = \"\";\r\n\r\n  $: viewBox = \"0 0 \" + icon.icon[0] + \" \" + icon.icon[1];\r\n\r\n  $: classes = \"fa-svelte \" + ($$props.class ? $$props.class : \"\");\r\n\r\n  $: path = icon.icon[4];\r\n</script>\r\n\r\n<style>\r\n  .fa-svelte {\r\n    width: 1em;\r\n    height: 1em;\r\n    overflow: visible;\r\n    display: inline-block;\r\n  }\r\n</style>",
    "<svelte:options tag={\"svelte-generic-crud-table\"}/>\n<script>\n    import {createEventDispatcher} from 'svelte';\n    import Icon from 'fa-svelte'\n    import {faTrash, faEdit, faPaperPlane, faTimes, faInfo, faPlus} from '@fortawesome/free-solid-svg-icons'\n    import {SvelteGenericCrudTableService} from \"./SvelteGenericCrudTableService\";\n\n    const dispatch = createEventDispatcher();\n    const sortStore = [];\n\n    const iconTrash = faTrash;\n    const iconEdit = faEdit;\n    const iconSend = faPaperPlane;\n    const iconCancel = faTimes;\n    const iconDetail = faInfo;\n    const iconCreate = faPlus;\n\n    const EDIT = 'EDIT';\n    const DELETE = 'DELETE';\n    const CREATE = 'CREATE';\n    const DETAILS = 'DETAILS';\n\n    export let name = '';\n    export let show_fields = [];\n    export let editable_fields = [];\n    export let table = [];\n    export let options = []\n\n    const NO_ROW_IN_EDIT_MODE = -1;\n    let cursor = NO_ROW_IN_EDIT_MODE;\n    const genericCrudTable = new SvelteGenericCrudTableService(name, editable_fields, show_fields);\n\n\n    function handleEdit(id) {\n        resetRawInEditMode(id);\n        cursor = id;\n        for (let i = 0; i < table.length; i++) {\n            genericCrudTable.resetEditMode(i);\n        }\n        genericCrudTable.setEditMode(id);\n    }\n\n    function handleCancelEdit(id) {\n        Object.entries(table[id]).forEach((elem) => {\n            document.getElementById(name + genericCrudTable.getKey(elem) + id).value =\n                    document.getElementById(name + genericCrudTable.getKey(elem) + id + 'copy').innerText;\n        });\n        genericCrudTable.resetEditMode(id);\n        genericCrudTable.resetDeleteMode(id);\n        cursor = NO_ROW_IN_EDIT_MODE;\n    }\n\n    function handleEditConfirmation(id) {\n        resetRawInEditMode(id);\n        Object.entries(table[id]).forEach((elem) => {\n            document.getElementById(name + genericCrudTable.getKey(elem) + id + 'copy').innerText =\n                    document.getElementById(name + genericCrudTable.getKey(elem) + id).value;\n        });\n        const body = genericCrudTable.gatherUpdates(id, table);\n        dispatch('update', {\n            id: id,\n            body: body\n        });\n        genericCrudTable.resetEditMode(id);\n        table = table;\n    }\n\n    function handleDelete(id) {\n        resetRawInEditMode(id);\n        genericCrudTable.resetDeleteMode(id)\n        cursor = id;\n        genericCrudTable.setDeleteMode(id);\n    }\n\n    function handleCancelDelete(id) {\n        genericCrudTable.resetEditMode(id);\n        genericCrudTable.resetDeleteMode(id);\n    }\n\n    function handleDeleteConfirmation(id) {\n        const body = genericCrudTable.gatherUpdates(id, table);\n        dispatch('delete', {\n            id: id,\n            body: body\n        });\n        genericCrudTable.resetDeleteMode(id);\n        table.splice(id, 1);\n        cursor = NO_ROW_IN_EDIT_MODE;\n        table = table;\n    }\n\n    function handleCreate() {\n        dispatch('create', {});\n    }\n\n    function handleDetails(id) {\n        resetRawInEditMode(id);\n        const body = genericCrudTable.gatherUpdates(id, table);\n        dispatch('details', {\n            id: id,\n            body: body\n        });\n    }\n\n\n    function resetRawInEditMode(id) {\n        if ((cursor !== id) && (cursor !== NO_ROW_IN_EDIT_MODE)) {\n            handleCancelEdit(cursor);\n        }\n    }\n\n    function handleSort(elem) {\n        if (sortStore[elem] === undefined || sortStore[elem] === 'DESC') {\n            sortStore[elem] = 'ASC';\n        } else {\n            sortStore[elem] = 'DESC';\n        }\n\n        const tableSort = (a, b) => {\n            var keyA = a[elem];\n            var keyB = b[elem];\n            if (sortStore[elem] === 'ASC') {\n                if (keyA < keyB) return -1;\n                if (keyA > keyB) return 1;\n            } else {\n                if (keyA < keyB) return 1;\n                if (keyA > keyB) return -1;\n            }\n            return 0;\n        };\n\n        table = table.sort(tableSort)\n    }\n\n</script>\n\n<main>\n    {#if (table !== undefined)}\n        {#if Array.isArray(table)}\n            <table>\n                {#each table as tableRow, i}\n                    {#if i === 0}\n                        <tr>\n                            {#each Object.keys(tableRow) as elem}\n                                <td class=\"headline {genericCrudTable.isShowField(elem) === false ? 'hidden' : 'shown'}\"\n                                    width=\"{genericCrudTable.getShowFieldWidth(elem)}\"\n                                    on:click={() => {\n                                    handleSort(elem)}}>\n                                    <textarea class=\"sortable\" value={genericCrudTable.makeCapitalLead(elem)} disabled></textarea>\n                                </td>\n                            {/each}\n                            <td id=\"labelOptions\" class=\"headline\">\n                                <textarea value=\"\" disabled></textarea>\n                            </td>\n                        </tr>\n                    {/if}\n                    <tr class=\"row\">\n                        {#each Object.entries(tableRow) as elem, j}\n                            <td class=\"{genericCrudTable.isShowField(genericCrudTable.getKey(elem)) === false ? 'hidden' : 'shown'}\"\n                                width=\"{genericCrudTable.getShowFieldWidth(genericCrudTable.getKey(elem))}\">\n                                <textarea id=\"{name}{genericCrudTable.getKey(elem)}{i}\"\n                                          aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}\"\n                                          value={genericCrudTable.getValue(elem)} disabled></textarea>\n                                <div class=\"hidden\"\n                                     id=\"{name}{genericCrudTable.getKey(elem)}{i}copy\"\n                                     aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}copy\">\n                                    {genericCrudTable.getValue(elem)}</div>\n                            </td>\n                            {#if Object.entries(tableRow).length - 1 === j}\n                                <td>\n                                    <div id=\"{name}options-default{i}\"\n                                         aria-label=\"{name}options-default{i}\"\n                                         class=\"options shown\">\n                                        {#if options.includes(DELETE)}\n                                            <div class=\"options red\" on:click={() => handleDelete(i)}\n                                                 title=\"Delete\"\n                                                 aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}delete\">\n                                                <Icon icon={iconTrash}/>\n                                            </div>\n                                        {/if}\n                                        {#if options.includes(EDIT)}\n                                            <div class=\"options green\"\n                                                 on:click={() => handleEdit(i)} title=\"Edit\">\n                                                <Icon icon={iconEdit}/>\n                                            </div>\n                                        {/if}\n                                        {#if options.includes(DETAILS)}\n                                            <div class=\"options blue\" on:click={() => handleDetails(i)} title=\"Details\">\n                                                <Icon icon={iconDetail}/>\n                                            </div>\n                                        {/if}\n                                    </div>\n                                    <div id=\"{name}options-edit{i}\" class=\"options hidden\">\n                                        {#if options.includes(EDIT)}\n                                            <div class=\"options green\" on:click={() => handleEditConfirmation(i)}\n                                                 title=\"Update\">\n                                                <Icon icon={iconSend}/>\n                                            </div>\n                                            <div class=\"options red\" on:click={() => handleCancelEdit(i)}\n                                                 title=\"Cancel\"\n                                                 aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}editCancel\">\n                                                <Icon icon={iconCancel}/>\n                                            </div>\n                                        {/if}\n                                    </div>\n                                    <div id=\"{name}options-delete{i}\"\n                                         aria-label=\"{name}options-delete{i}\"\n                                         class=\"options hidden\">\n                                        {#if options.includes(DELETE)}\n                                            <div class=\"options green\" on:click={() => handleDeleteConfirmation(i)}\n                                                 title=\"Delete\"\n                                                 aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}deleteConfirmation\">\n                                                <Icon icon={iconSend}/>\n                                            </div>\n                                            <div class=\"options red\" on:click={() => handleCancelDelete(i)}\n                                                 title=\"Cancel\"\n                                                 aria-label=\"{name}{genericCrudTable.getKey(elem)}{i}deleteCancel\">\n                                                <Icon icon={iconCancel}/>\n                                            </div>\n                                        {/if}\n                                    </div>\n                                </td>\n                            {/if}\n                        {/each}\n\n                    </tr>\n                {/each}\n            </table>\n            {#if options.includes(CREATE)}\n                <div class=\"options\" id=\"options-create\" on:click={handleCreate} title=\"Create\">\n                    <Icon icon={iconCreate}/>\n                </div>\n                <br><br>\n            {/if}\n        {:else}\n            {JSON.stringify(table)}\n        {/if}\n    {/if}\n</main>\n\n<style>\n    .red:hover {\n        color: red;\n    }\n\n    .green:hover {\n        color: limegreen;\n    }\n\n    .blue:hover {\n        color: dodgerblue;\n    }\n\n    table {\n        text-align: left;\n        border-collapse: collapse;\n        table-layout: fixed;\n        width: 100%;\n    }\n\n    .headline {\n        border-bottom: 1px solid #dddddd;\n        cursor: pointer;\n    }\n\n    .sortable {\n        cursor:pointer;\n    }\n\n    td {\n        color: #5f5f5f;\n        border: none;\n        font-size: 0.85em;\n        font-weight: 200;\n        padding-left: 0.2em;\n        float: left;\n    }\n\n    #labelOptions {\n        color: #aaaaaa;\n        font-weight: 100;\n        width: 100px;\n    }\n\n    .options {\n        padding: 0.2em 0.2em 0em;\n        float: left;\n        min-height: 1.3em;\n        font-size: 1em;\n        cursor: pointer;\n        opacity: 60%;\n    }\n\n    .options:hover {\n        opacity: 100%;\n    }\n\n    #options-create {\n        text-align: left;\n        height: 1.3em;\n        padding-bottom: 1em;\n        max-width: 0px;\n    }\n\n    .hidden {\n        display: none;\n    }\n\n    .shown {\n        display: block;\n    }\n\n    .row {\n        margin-top: 0px;\n        margin-bottom: 1px;\n    }\n\n    .row:hover {\n        background-color: #efefef;\n    }\n\n    textarea {\n        position: relative;\n        resize: none;\n        top: 0.4em;\n        width: 100%;\n        min-height: 1.3em;\n        max-height: 1.6em;\n        padding: 1px 0px 0px;\n        background-color: #ffffff;\n        border: none;\n        font-size: 0.85em;\n        font-weight: 300;\n        text-overflow: ellipsis;\n        white-space: pre;\n        overflow: hidden;\n        -webkit-transition: box-shadow 0.3s;\n        transition: box-shadow 0.3s;\n        box-shadow: -6px 6px 0px -5px #aaaaaa, 6px 6px 0px -5px #aaaaaa;\n    }\n\n    textarea:not(:disabled) {\n        height: 1.6em;\n        min-height: 1.6em;\n        padding-left: 0.3em;\n    }\n\n    textarea:disabled {\n        color: #5f5f5f;\n        background-color: inherit;\n        font-size: 0.85em;\n        font-weight: 200;\n        box-shadow: none;\n        height: 1.3em;\n        max-height: 1.3em;\n    }\n\n    input:focus,\n    textarea:focus,\n    select:focus {\n        outline: none;\n        font-weight: 300;\n        box-shadow: -6px 6px 0px -5px #5f5f5f, 6px 6px 0px -5px #5f5f5f;\n        white-space: normal;\n        overflow: auto;\n        padding-top: 1px;\n    }\n\n    textarea:not(:focus) {\n        max-height: 1.3em;\n    }\n\n</style>\n",
    "<script>\n    import SvelteGenericCrudTable from \"svelte-generic-crud-table\";\n\n    function handleDelete(event) {\n        const id = event.detail.id; // position in myObjectArray\n        const body = event.detail.body; // object to delete\n        console.log(JSON.stringify(event.detail.body));\n        myObjectArray.slice(id,1);\n    }\n\n    function handleUpdate(event) {\n        const id = event.detail.id; // position in table\n        const body = event.detail.body;\n        console.log(JSON.stringify(body));\n        myObjectArray[id] = body;\n    }\n\n    function handleCreate(event) {\n        console.log(JSON.stringify(event.detail)); // empty object is passed by now\n        myObjectArray.push({id: -1, name:'new Element', sthg:'2345', why:'1234'})\n        myObjectArray = myObjectArray;\n    }\n\n    function handleDetails(event) {\n        const id = event.detail.id; // position in table\n        const body = event.detail.body;\n        console.log(JSON.stringify(body));\n    }\n\n    // example object array. This should be your db query result.\n    let myObjectArray = [\n        {id: 1, name: \"A_NAME\", sthg: \"A_STHG\", why: 'because'},\n        {id: 2, name: \"ANOTHER_NAME\", sthg: \"ANOTHER_STHG\", why: 'I can'},\n        {id: 3, name: \"svelte-generic-crud-table\", sthg: \"Awesome !\", why: '!'}\n    ]\n    export let name;\n</script>\n\n\n<main>\n    <h1>Generic CRUD Table</h1>\n    <SvelteGenericCrudTable on:delete={handleDelete}\n                            on:update={handleUpdate}\n                            on:create={handleCreate}\n                            on:details={handleDetails}\n                            name=\"tableName\"\n                            show_fields={[\n                                {name: '200px'},\n                                {sthg: '20%'},\n                                {why: '100px'}\n                            ]}\n                            editable_fields={['name', 'why']}\n                            options={['CREATE', 'EDIT', 'DELETE', 'DETAILS']}\n                            table={myObjectArray}/>\n</main>\n\n<style>\n    main {\n        text-align: center;\n        padding: 1em;\n        max-width: 240px;\n        margin: 0 auto;\n    }\n\n    @media (min-width: 640px) {\n        main {\n            max-width: none;\n        }\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAwBE,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,YAAY,AACvB,CAAC;ACoNC,mBAAI,MAAM,AAAC,CAAC,AACR,KAAK,CAAE,GAAG,AACd,CAAC,AAED,qBAAM,MAAM,AAAC,CAAC,AACV,KAAK,CAAE,SAAS,AACpB,CAAC,AAED,oBAAK,MAAM,AAAC,CAAC,AACT,KAAK,CAAE,UAAU,AACrB,CAAC,AAED,KAAK,eAAC,CAAC,AACH,UAAU,CAAE,IAAI,CAChB,eAAe,CAAE,QAAQ,CACzB,YAAY,CAAE,KAAK,CACnB,KAAK,CAAE,IAAI,AACf,CAAC,AAED,SAAS,eAAC,CAAC,AACP,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,MAAM,CAAE,OAAO,AACnB,CAAC,AAED,SAAS,eAAC,CAAC,AACP,OAAO,OAAO,AAClB,CAAC,AAED,EAAE,eAAC,CAAC,AACA,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,YAAY,CAAE,KAAK,CACnB,KAAK,CAAE,IAAI,AACf,CAAC,AAED,aAAa,eAAC,CAAC,AACX,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,KAAK,AAChB,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,OAAO,CAAE,KAAK,CAAC,KAAK,CAAC,GAAG,CACxB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,GAAG,AAChB,CAAC,AAED,uBAAQ,MAAM,AAAC,CAAC,AACZ,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,eAAe,eAAC,CAAC,AACb,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,GAAG,AAClB,CAAC,AAED,OAAO,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,AACjB,CAAC,AAED,MAAM,eAAC,CAAC,AACJ,OAAO,CAAE,KAAK,AAClB,CAAC,AAED,IAAI,eAAC,CAAC,AACF,UAAU,CAAE,GAAG,CACf,aAAa,CAAE,GAAG,AACtB,CAAC,AAED,mBAAI,MAAM,AAAC,CAAC,AACR,gBAAgB,CAAE,OAAO,AAC7B,CAAC,AAED,QAAQ,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,GAAG,CAAE,KAAK,CACV,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CACpB,gBAAgB,CAAE,OAAO,CACzB,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,GAAG,CAChB,QAAQ,CAAE,MAAM,CAChB,kBAAkB,CAAE,UAAU,CAAC,IAAI,CACnC,UAAU,CAAE,UAAU,CAAC,IAAI,CAC3B,UAAU,CAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,AACnE,CAAC,AAED,uBAAQ,KAAK,SAAS,CAAC,AAAC,CAAC,AACrB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,CACjB,YAAY,CAAE,KAAK,AACvB,CAAC,AAED,uBAAQ,SAAS,AAAC,CAAC,AACf,KAAK,CAAE,OAAO,CACd,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,MAAM,CACjB,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,AACrB,CAAC,AAGD,uBAAQ,MAAM,AACD,CAAC,AACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAC/D,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,IAAI,CACd,WAAW,CAAE,GAAG,AACpB,CAAC,AAED,uBAAQ,KAAK,MAAM,CAAC,AAAC,CAAC,AAClB,UAAU,CAAE,KAAK,AACrB,CAAC;ACzTD,IAAI,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACvB,IAAI,cAAC,CAAC,AACF,SAAS,CAAE,IAAI,AACnB,CAAC,AACL,CAAC"
}